N = int(input())
lst = [list(map(int, input().split())) for _ in range(N)]
dp = [0 for _ in range(N+1)]   # 받을 수 있는 돈을 저장할 배열
# 마지막 날짜부터 순회하므로 dp[0]에 최대 수익이 저장된다.

# print(lst[N][0]) -> T
# N : 퇴사일 (마지막 날의 다음날)
for i in range(N-1, -1, -1):
    # 만약 i일에 상담하는 것이 퇴사일을 넘기면 상담을 하지 않는다.
    # 만약 상담에 걸리는 시간이 하루라면 퇴사 전까지 해결할 수 있으므로 =은 포함하지 않는다.
    if i + lst[i][0] > N:
        # 상담을 하지 않았으므로 오늘의 수익은 이전에 저장되어 있던 수익과 같다.
        # 스케줄을 거꾸로 돌고 있다!
        dp[i] = dp[i+1]
    
    else:
        # i일에 상담을 하는 것과 상담을 안하는 것 중 큰 것을 선택
        # 상담을 한다면 오늘 상담을 해서 얻는 이익 + 오늘 이후에 상담해서 얻었던 이익을 모두 더한다.
        dp[i] = max(dp[i+1], dp[i + lst[i][0]] + lst[i][1])


print(dp[0])